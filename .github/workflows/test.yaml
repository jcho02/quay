name: CI-test
on:
  # See the documentation for more intricate event dispatch here:
  # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
  push:
    branches:
    - "!dependabot/*"
    - "*"
  pull_request:
    branches:
    - "*"

jobs:
  cyrpess:
    name: Cypress Tests
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        os: [ ubuntu20.04 ]
        architecture: [ amd64, ppc64le ]
      fail-fast: false
      max-parallel: 2   
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
       
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Install dependencies and check types on ${{ matrix.architecture }}
      run: |
        docker run --rm --platform ${{ matrix.architecture }} -v /var/run/docker.sock:/var/run/docker.sock --mount "type=bind,src=$(pwd),dst=/build" -w "/build" ubuntu:20.04 /bin/bash -ec ' \
        export DEBIAN_FRONTEND=noninteractive; \
        apt-get update -y; \
        apt-get install -y git wget tar curl npm gnupg2 ca-certificates sudo build-essential gcc manpages-dev autoconf libtool pkg-config software-properties-common; \
        sudo install -m 0755 -d /etc/apt/keyrings; \
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg; \
        sudo chmod a+r /etc/apt/keyrings/docker.gpg; \
        echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null; \
        apt-get update -y; \
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin; \
        sudo apt-get install -y docker-compose; \
        export DOCKER_BUILDKIT=1; \
        docker compose --version; \
        docker build -t localhost/quay-local:latest .; \
        echo "$(pwd)"; \
        echo "$(ls -l)"; \
        cd ..; \
        chown -R 1001:root build/; \
        cd build; \
        docker ps -a; \
        DOCKER_USER="1001:0" docker compose up -d --no-build quay; \
        docker ps -a;'
